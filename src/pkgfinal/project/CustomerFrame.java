/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkgfinal.project;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marc Louis A. Lactao
 */
public class CustomerFrame extends javax.swing.JFrame {
    private final String customerFile = "customers.txt";

    /**
     * Creates new form CustomerFrame
     */
    public CustomerFrame() {
        initComponents();
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int selectedRow = CustomerTable.getSelectedRow();
                if (selectedRow >= 0) {
                    CustomerNameTF.setText(CustomerTable.getValueAt(selectedRow, 0).toString());
                    CustomerEmailTF.setText(CustomerTable.getValueAt(selectedRow, 1).toString());
                    CustomerContactTF.setText(CustomerTable.getValueAt(selectedRow, 2).toString());
                    CustomerAddressTF.setText(CustomerTable.getValueAt(selectedRow, 3).toString());
                    StatusCB.setSelectedItem(CustomerTable.getValueAt(selectedRow, 4).toString());
                }
            }
        });
        loadCustomersFromFile();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CustomerNameTF = new javax.swing.JTextField();
        CustomerEmailTF = new javax.swing.JTextField();
        CustomerContactTF = new javax.swing.JTextField();
        CustomerAddressTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        AddButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        StatusCB = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        BackToDashboard = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\tanco\\OneDrive\\Documents\\info.png")); // NOI18N
        jLabel1.setText("Customer Information");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Email Address: ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Contact Number:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Address: ");

        CustomerNameTF.setBackground(new java.awt.Color(255, 255, 255));
        CustomerNameTF.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        CustomerNameTF.setForeground(new java.awt.Color(0, 0, 0));
        CustomerNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerNameTFActionPerformed(evt);
            }
        });

        CustomerEmailTF.setBackground(new java.awt.Color(255, 255, 255));
        CustomerEmailTF.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        CustomerEmailTF.setForeground(new java.awt.Color(0, 0, 0));
        CustomerEmailTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerEmailTFActionPerformed(evt);
            }
        });

        CustomerContactTF.setBackground(new java.awt.Color(255, 255, 255));
        CustomerContactTF.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        CustomerContactTF.setForeground(new java.awt.Color(0, 0, 0));

        CustomerAddressTF.setBackground(new java.awt.Color(255, 255, 255));
        CustomerAddressTF.setFont(new java.awt.Font("Book Antiqua", 0, 12)); // NOI18N
        CustomerAddressTF.setForeground(new java.awt.Color(0, 0, 0));
        CustomerAddressTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerAddressTFActionPerformed(evt);
            }
        });

        CustomerTable.setBackground(new java.awt.Color(255, 255, 255));
        CustomerTable.setForeground(new java.awt.Color(0, 0, 0));
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email", "Contact", "Address", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CustomerTable);

        AddButton.setBackground(java.awt.Color.white);
        AddButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        AddButton.setForeground(new java.awt.Color(0, 0, 0));
        AddButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\tanco\\OneDrive\\Documents\\add-user (1).png")); // NOI18N
        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        UpdateButton.setBackground(java.awt.Color.white);
        UpdateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(0, 0, 0));
        UpdateButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\tanco\\OneDrive\\Documents\\updated.png")); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        RemoveButton.setBackground(java.awt.Color.white);
        RemoveButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        RemoveButton.setForeground(new java.awt.Color(0, 0, 0));
        RemoveButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\tanco\\OneDrive\\Documents\\delete.png")); // NOI18N
        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        StatusCB.setBackground(java.awt.Color.white);
        StatusCB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        StatusCB.setForeground(new java.awt.Color(0, 0, 0));
        StatusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Select status");

        BackToDashboard.setBackground(java.awt.Color.white);
        BackToDashboard.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BackToDashboard.setForeground(new java.awt.Color(0, 0, 0));
        BackToDashboard.setText("Back to dashboard");
        BackToDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToDashboardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AddButton))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(UpdateButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(RemoveButton))
                                            .addComponent(CustomerNameTF)
                                            .addComponent(CustomerEmailTF)
                                            .addComponent(CustomerContactTF)
                                            .addComponent(CustomerAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(StatusCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(jLabel1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackToDashboard)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackToDashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CustomerNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(CustomerEmailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(CustomerContactTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(CustomerAddressTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StatusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddButton)
                            .addComponent(UpdateButton)
                            .addComponent(RemoveButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CustomerNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerNameTFActionPerformed

    private void CustomerEmailTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerEmailTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerEmailTFActionPerformed

    private void CustomerAddressTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerAddressTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerAddressTFActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) CustomerTable.getModel();
        try {
            String cusName = CustomerNameTF.getText().trim();
            String cusEmail = CustomerEmailTF.getText().trim();
            String contactText = CustomerContactTF.getText().trim();
            String address = CustomerAddressTF.getText().trim();
            String status = (String) StatusCB.getSelectedItem();

            if (cusName.isEmpty() || cusEmail.isEmpty() || contactText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter all required fields (Name, Email, Contact).");
                return;
            }

            long contact = Long.parseLong(contactText);

            for (CustomerInfo c : Dashboard.customerList) {
                if (c.getCusName().equalsIgnoreCase(cusName)) {
                    JOptionPane.showMessageDialog(this, "Customer name already exists!", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (c.getCusEmail().equalsIgnoreCase(cusEmail)) {
                    JOptionPane.showMessageDialog(this, "Customer email already exists!", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (c.getCusContact() == contact) {
                    JOptionPane.showMessageDialog(this, "Customer contact number already exists!", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            Dashboard.customerList.add(new CustomerInfo(cusName, cusEmail, contact, address, status));
            model.addRow(new Object[]{cusName, cusEmail, contact, address, status});
            saveCustomersToFile();

            JOptionPane.showMessageDialog(this, "Customer added successfully!");

            CustomerNameTF.setText("");
            CustomerEmailTF.setText("");
            CustomerContactTF.setText("");
            CustomerAddressTF.setText("");
            StatusCB.setSelectedIndex(0);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "Please enter a valid numeric contact number.",
                "Invalid Contact",
                JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_AddButtonActionPerformed

    private void BackToDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToDashboardActionPerformed
        new Dashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackToDashboardActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        int selectedRow = CustomerTable.getSelectedRow();
        if (selectedRow >= 0) {
             String updatedName = CustomerNameTF.getText().trim();
             String updatedEmail = CustomerEmailTF.getText().trim();
             String updatedContact = CustomerContactTF.getText().trim();
             String updatedAddress = CustomerAddressTF.getText().trim();
             String updatedStatus = StatusCB.getSelectedItem().toString();

             if (updatedName.isEmpty() || updatedEmail.isEmpty() || updatedContact.isEmpty()) {
                 JOptionPane.showMessageDialog(this, "Name, Email, and Contact fields cannot be empty.", "Missing Fields", JOptionPane.WARNING_MESSAGE);
                 return;
             }

             try {
                 long contactNum = Long.parseLong(updatedContact);

                 for (int i = 0; i < Dashboard.customerList.size(); i++) {
                     if (i == selectedRow) continue;
                     CustomerInfo existing = Dashboard.customerList.get(i);
                     if (existing.getCusName().equalsIgnoreCase(updatedName)) {
                         JOptionPane.showMessageDialog(this, "Another customer with this name already exists.", "Duplicate Name", JOptionPane.ERROR_MESSAGE);
                         return;
                     }
                     if (existing.getCusEmail().equalsIgnoreCase(updatedEmail)) {
                         JOptionPane.showMessageDialog(this, "Another customer with this email already exists.", "Duplicate Email", JOptionPane.ERROR_MESSAGE);
                         return;
                     }
                     if (existing.getCusContact() == contactNum) {
                         JOptionPane.showMessageDialog(this, "Another customer with this contact number already exists.", "Duplicate Contact", JOptionPane.ERROR_MESSAGE);
                         return;
                     }
                 }

                 DefaultTableModel model = (DefaultTableModel) CustomerTable.getModel();
                 model.setValueAt(updatedName, selectedRow, 0);
                 model.setValueAt(updatedEmail, selectedRow, 1);
                 model.setValueAt(contactNum, selectedRow, 2);
                 model.setValueAt(updatedAddress, selectedRow, 3);
                 model.setValueAt(updatedStatus, selectedRow, 4);

                 CustomerInfo updatedCustomer = new CustomerInfo(updatedName, updatedEmail, contactNum, updatedAddress, updatedStatus);
                 Dashboard.customerList.set(selectedRow, updatedCustomer);

                 saveCustomersToFile();
                 JOptionPane.showMessageDialog(this, "Customer updated successfully!");

             } catch (NumberFormatException e) {
                 JOptionPane.showMessageDialog(this, "Please enter a valid numeric contact number.", "Invalid Contact", JOptionPane.ERROR_MESSAGE);
             }

         } else {
             JOptionPane.showMessageDialog(this, "Please select a customer to update.", "No Selection", JOptionPane.WARNING_MESSAGE);
         }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        int selectedRow = CustomerTable.getSelectedRow();
        if (selectedRow >= 0) {
            String nameToRemove = CustomerTable.getValueAt(selectedRow, 0).toString();

            Dashboard.customerList.removeIf(c -> c.getCusName().equals(nameToRemove));

            DefaultTableModel model = (DefaultTableModel) CustomerTable.getModel();
            model.removeRow(selectedRow);

            CustomerNameTF.setText("");
            CustomerEmailTF.setText("");
            CustomerContactTF.setText("");
            CustomerAddressTF.setText("");
            StatusCB.setSelectedIndex(0);

            saveCustomersToFile();

            JOptionPane.showMessageDialog(this, "Customer removed successfully.");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a customer to remove.");
        }
    }//GEN-LAST:event_RemoveButtonActionPerformed
    
    private void saveCustomersToFile() {
    try (PrintWriter pw = new PrintWriter(new FileWriter(customerFile))) {
        for (CustomerInfo c : Dashboard.customerList) {
            pw.println(c.getCusName() + "," + c.getCusEmail() + "," + c.getCusContact() + "," + c.getCusAddress() + "," + c.getCusStatus());
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error saving customer data.");
    }
}

    private void loadCustomersFromFile() {
    File file = new File(customerFile);
    if (!file.exists()) return;

    try (BufferedReader br = new BufferedReader(new FileReader(customerFile))) {
        String line;
        DefaultTableModel model = (DefaultTableModel) CustomerTable.getModel();
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length == 5) {
                String name = data[0];
                String email = data[1];
                long contact = Long.parseLong(data[2]);
                String address = data[3];
                String status = data[4];

                CustomerInfo customer = new CustomerInfo(name, email, contact, address, status);
                Dashboard.customerList.add(customer);
                model.addRow(new Object[]{name, email, contact, address, status});
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error loading customer data.");
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton BackToDashboard;
    private javax.swing.JTextField CustomerAddressTF;
    private javax.swing.JTextField CustomerContactTF;
    private javax.swing.JTextField CustomerEmailTF;
    private javax.swing.JTextField CustomerNameTF;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JComboBox<String> StatusCB;
    private javax.swing.JButton UpdateButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
