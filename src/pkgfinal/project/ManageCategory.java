/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkgfinal.project;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marc Louis A. Lactao
 */
public class ManageCategory extends javax.swing.JFrame {
    public static ArrayList<String> categoryList = new ArrayList();
            int id = 1;
            
    public ManageCategory() {
        initComponents();
        
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = CategoryTable.getSelectedRow();
        if (selectedRow >= 0) {
            
            String categoryName = CategoryTable.getValueAt(selectedRow, 1).toString();
            CategoryNameTF.setText(categoryName);
        }
    }
});

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        CategoryNameTF = new javax.swing.JTextField();
        SaveButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        BackToDashboard = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Category");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 311, 45));

        CategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CategoryTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 69, 309, 353));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Category Name: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 69, -1, -1));

        CategoryNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryNameTFActionPerformed(evt);
            }
        });
        jPanel1.add(CategoryNameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 91, 260, -1));

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, -1));

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(UpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, -1, -1));

        ResetButton.setText("Reset");
        jPanel1.add(ResetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, -1, -1));

        BackToDashboard.setText("Back To Dashboard");
        BackToDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToDashboardActionPerformed(evt);
            }
        });
        jPanel1.add(BackToDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 390, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CategoryNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryNameTFActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        String categoryName = CategoryNameTF.getText().trim();

            // Check if the field is empty
        if (categoryName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Category name cannot be empty", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

            // Check for duplicates
        boolean isDuplicate = false;
        for (int i = 0; i < model.getRowCount(); i++) {
            String existingCategory = model.getValueAt(i, 1).toString();
                if (existingCategory.equalsIgnoreCase(categoryName)) {
                    isDuplicate = true;
                    break;
            }
        }

            if (isDuplicate) {
                JOptionPane.showMessageDialog(this, "Category already exists!", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                String formattedId = String.format("%04d", id);
                model.addRow(new Object[] {formattedId, categoryName});
                
                categoryList.add(categoryName);
                
                CategoryNameTF.setText("");
                id++;
            }
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
                                                  
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        int selectedRow = CategoryTable.getSelectedRow();
        String updatedCategoryName = CategoryNameTF.getText().trim();

        // No row selected
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Empty name check
        if (updatedCategoryName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Category name cannot be empty.", "Empty Field", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Duplicate check (excluding selected row)
        for (int i = 0; i < model.getRowCount(); i++) {
            if (i == selectedRow) continue; // skip the row being updated
            String existingCategory = model.getValueAt(i, 1).toString();
            if (existingCategory.equalsIgnoreCase(updatedCategoryName)) {
                JOptionPane.showMessageDialog(this, "Category name already exists.", "Duplicate Name", JOptionPane.WARNING_MESSAGE);
                return;

        }

        // Update the category name
        model.setValueAt(updatedCategoryName, selectedRow, 1); // column 1 = category name
        JOptionPane.showMessageDialog(this, "Category updated successfully!");

        // Reset field and selection
        CategoryNameTF.setText("");
        }

        // Update the table
        model.setValueAt(updatedCategoryName, selectedRow, 1);

        // Update categoryList as well
        categoryList.set(selectedRow, updatedCategoryName);

    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void CategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryTableMouseClicked

    private void BackToDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToDashboardActionPerformed
        Dashboard dash = new Dashboard();
        dash.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackToDashboardActionPerformed

    private void loadCategoryListToTable() {
    DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
    model.setRowCount(0); // Clear existing rows to avoid duplicates

    id = 1; // Reset ID so it matches correctly
    for (String name : categoryList) {
        model.addRow(new Object[]{id, name});
        id++;
    }
}
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadCategoryListToTable();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToDashboard;
    private javax.swing.JTextField CategoryNameTF;
    private javax.swing.JTable CategoryTable;
    private javax.swing.JButton ResetButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
